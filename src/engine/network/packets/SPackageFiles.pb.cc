// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SPackageFiles.proto

#include "SPackageFiles.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tdrp {
namespace packet {
class SPackageFiles_FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SPackageFiles_File>
      _instance;
} _SPackageFiles_File_default_instance_;
class SPackageFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SPackageFiles>
      _instance;
} _SPackageFiles_default_instance_;
}  // namespace packet
}  // namespace tdrp
namespace protobuf_SPackageFiles_2eproto {
void InitDefaultsSPackageFiles_FileImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tdrp::packet::_SPackageFiles_File_default_instance_;
    new (ptr) ::tdrp::packet::SPackageFiles_File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdrp::packet::SPackageFiles_File::InitAsDefaultInstance();
}

void InitDefaultsSPackageFiles_File() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSPackageFiles_FileImpl);
}

void InitDefaultsSPackageFilesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_SPackageFiles_2eproto::InitDefaultsSPackageFiles_File();
  {
    void* ptr = &::tdrp::packet::_SPackageFiles_default_instance_;
    new (ptr) ::tdrp::packet::SPackageFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdrp::packet::SPackageFiles::InitAsDefaultInstance();
}

void InitDefaultsSPackageFiles() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSPackageFilesImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::SPackageFiles_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::SPackageFiles_File, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::SPackageFiles_File, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::SPackageFiles_File, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::SPackageFiles_File, crc32_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::SPackageFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::SPackageFiles, files_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tdrp::packet::SPackageFiles_File)},
  { 9, -1, sizeof(::tdrp::packet::SPackageFiles)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdrp::packet::_SPackageFiles_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdrp::packet::_SPackageFiles_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SPackageFiles.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023SPackageFiles.proto\022\013tdrp.packet\"\200\001\n\rS"
      "PackageFiles\022.\n\005files\030\001 \003(\0132\037.tdrp.packe"
      "t.SPackageFiles.File\032\?\n\004File\022\014\n\004name\030\001 \001"
      "(\t\022\014\n\004size\030\002 \001(\006\022\014\n\004date\030\003 \001(\006\022\r\n\005crc32\030"
      "\004 \001(\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 173);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SPackageFiles.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_SPackageFiles_2eproto
namespace tdrp {
namespace packet {

// ===================================================================

void SPackageFiles_File::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SPackageFiles_File::kNameFieldNumber;
const int SPackageFiles_File::kSizeFieldNumber;
const int SPackageFiles_File::kDateFieldNumber;
const int SPackageFiles_File::kCrc32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SPackageFiles_File::SPackageFiles_File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_SPackageFiles_2eproto::InitDefaultsSPackageFiles_File();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdrp.packet.SPackageFiles.File)
}
SPackageFiles_File::SPackageFiles_File(const SPackageFiles_File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc32_) -
    reinterpret_cast<char*>(&size_)) + sizeof(crc32_));
  // @@protoc_insertion_point(copy_constructor:tdrp.packet.SPackageFiles.File)
}

void SPackageFiles_File::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc32_) -
      reinterpret_cast<char*>(&size_)) + sizeof(crc32_));
  _cached_size_ = 0;
}

SPackageFiles_File::~SPackageFiles_File() {
  // @@protoc_insertion_point(destructor:tdrp.packet.SPackageFiles.File)
  SharedDtor();
}

void SPackageFiles_File::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SPackageFiles_File::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SPackageFiles_File::descriptor() {
  ::protobuf_SPackageFiles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SPackageFiles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SPackageFiles_File& SPackageFiles_File::default_instance() {
  ::protobuf_SPackageFiles_2eproto::InitDefaultsSPackageFiles_File();
  return *internal_default_instance();
}

SPackageFiles_File* SPackageFiles_File::New(::google::protobuf::Arena* arena) const {
  SPackageFiles_File* n = new SPackageFiles_File;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SPackageFiles_File::Clear() {
// @@protoc_insertion_point(message_clear_start:tdrp.packet.SPackageFiles.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc32_) -
      reinterpret_cast<char*>(&size_)) + sizeof(crc32_));
  _internal_metadata_.Clear();
}

bool SPackageFiles_File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdrp.packet.SPackageFiles.File)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tdrp.packet.SPackageFiles.File.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 date = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 crc32 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &crc32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdrp.packet.SPackageFiles.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdrp.packet.SPackageFiles.File)
  return false;
#undef DO_
}

void SPackageFiles_File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdrp.packet.SPackageFiles.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdrp.packet.SPackageFiles.File.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // fixed64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->size(), output);
  }

  // fixed64 date = 3;
  if (this->date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->date(), output);
  }

  // fixed32 crc32 = 4;
  if (this->crc32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->crc32(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdrp.packet.SPackageFiles.File)
}

::google::protobuf::uint8* SPackageFiles_File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdrp.packet.SPackageFiles.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdrp.packet.SPackageFiles.File.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // fixed64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->size(), target);
  }

  // fixed64 date = 3;
  if (this->date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->date(), target);
  }

  // fixed32 crc32 = 4;
  if (this->crc32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->crc32(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdrp.packet.SPackageFiles.File)
  return target;
}

size_t SPackageFiles_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdrp.packet.SPackageFiles.File)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // fixed64 size = 2;
  if (this->size() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 date = 3;
  if (this->date() != 0) {
    total_size += 1 + 8;
  }

  // fixed32 crc32 = 4;
  if (this->crc32() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SPackageFiles_File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdrp.packet.SPackageFiles.File)
  GOOGLE_DCHECK_NE(&from, this);
  const SPackageFiles_File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SPackageFiles_File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdrp.packet.SPackageFiles.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdrp.packet.SPackageFiles.File)
    MergeFrom(*source);
  }
}

void SPackageFiles_File::MergeFrom(const SPackageFiles_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdrp.packet.SPackageFiles.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.date() != 0) {
    set_date(from.date());
  }
  if (from.crc32() != 0) {
    set_crc32(from.crc32());
  }
}

void SPackageFiles_File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdrp.packet.SPackageFiles.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPackageFiles_File::CopyFrom(const SPackageFiles_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdrp.packet.SPackageFiles.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPackageFiles_File::IsInitialized() const {
  return true;
}

void SPackageFiles_File::Swap(SPackageFiles_File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SPackageFiles_File::InternalSwap(SPackageFiles_File* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(size_, other->size_);
  swap(date_, other->date_);
  swap(crc32_, other->crc32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SPackageFiles_File::GetMetadata() const {
  protobuf_SPackageFiles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SPackageFiles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SPackageFiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SPackageFiles::kFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SPackageFiles::SPackageFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_SPackageFiles_2eproto::InitDefaultsSPackageFiles();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdrp.packet.SPackageFiles)
}
SPackageFiles::SPackageFiles(const SPackageFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      files_(from.files_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tdrp.packet.SPackageFiles)
}

void SPackageFiles::SharedCtor() {
  _cached_size_ = 0;
}

SPackageFiles::~SPackageFiles() {
  // @@protoc_insertion_point(destructor:tdrp.packet.SPackageFiles)
  SharedDtor();
}

void SPackageFiles::SharedDtor() {
}

void SPackageFiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SPackageFiles::descriptor() {
  ::protobuf_SPackageFiles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SPackageFiles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SPackageFiles& SPackageFiles::default_instance() {
  ::protobuf_SPackageFiles_2eproto::InitDefaultsSPackageFiles();
  return *internal_default_instance();
}

SPackageFiles* SPackageFiles::New(::google::protobuf::Arena* arena) const {
  SPackageFiles* n = new SPackageFiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SPackageFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:tdrp.packet.SPackageFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  _internal_metadata_.Clear();
}

bool SPackageFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdrp.packet.SPackageFiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tdrp.packet.SPackageFiles.File files = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdrp.packet.SPackageFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdrp.packet.SPackageFiles)
  return false;
#undef DO_
}

void SPackageFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdrp.packet.SPackageFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tdrp.packet.SPackageFiles.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->files(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdrp.packet.SPackageFiles)
}

::google::protobuf::uint8* SPackageFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdrp.packet.SPackageFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tdrp.packet.SPackageFiles.File files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->files(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdrp.packet.SPackageFiles)
  return target;
}

size_t SPackageFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdrp.packet.SPackageFiles)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tdrp.packet.SPackageFiles.File files = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SPackageFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdrp.packet.SPackageFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const SPackageFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SPackageFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdrp.packet.SPackageFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdrp.packet.SPackageFiles)
    MergeFrom(*source);
  }
}

void SPackageFiles::MergeFrom(const SPackageFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdrp.packet.SPackageFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
}

void SPackageFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdrp.packet.SPackageFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPackageFiles::CopyFrom(const SPackageFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdrp.packet.SPackageFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPackageFiles::IsInitialized() const {
  return true;
}

void SPackageFiles::Swap(SPackageFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SPackageFiles::InternalSwap(SPackageFiles* other) {
  using std::swap;
  files_.InternalSwap(&other->files_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SPackageFiles::GetMetadata() const {
  protobuf_SPackageFiles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SPackageFiles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace packet
}  // namespace tdrp

// @@protoc_insertion_point(global_scope)

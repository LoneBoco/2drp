// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SSceneObjectChange.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_SSceneObjectChange_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_SSceneObjectChange_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_SSceneObjectChange_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_SSceneObjectChange_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_SSceneObjectChange_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_SSceneObjectChange_2eproto_metadata_getter(int index);
namespace tdrp {
namespace packet {
class SSceneObjectChange;
struct SSceneObjectChangeDefaultTypeInternal;
extern SSceneObjectChangeDefaultTypeInternal _SSceneObjectChange_default_instance_;
class SSceneObjectChange_Attribute;
struct SSceneObjectChange_AttributeDefaultTypeInternal;
extern SSceneObjectChange_AttributeDefaultTypeInternal _SSceneObjectChange_Attribute_default_instance_;
}  // namespace packet
}  // namespace tdrp
PROTOBUF_NAMESPACE_OPEN
template<> ::tdrp::packet::SSceneObjectChange* Arena::CreateMaybeMessage<::tdrp::packet::SSceneObjectChange>(Arena*);
template<> ::tdrp::packet::SSceneObjectChange_Attribute* Arena::CreateMaybeMessage<::tdrp::packet::SSceneObjectChange_Attribute>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tdrp {
namespace packet {

// ===================================================================

class SSceneObjectChange_Attribute PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tdrp.packet.SSceneObjectChange.Attribute) */ {
 public:
  inline SSceneObjectChange_Attribute() : SSceneObjectChange_Attribute(nullptr) {}
  virtual ~SSceneObjectChange_Attribute();
  explicit constexpr SSceneObjectChange_Attribute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SSceneObjectChange_Attribute(const SSceneObjectChange_Attribute& from);
  SSceneObjectChange_Attribute(SSceneObjectChange_Attribute&& from) noexcept
    : SSceneObjectChange_Attribute() {
    *this = ::std::move(from);
  }

  inline SSceneObjectChange_Attribute& operator=(const SSceneObjectChange_Attribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSceneObjectChange_Attribute& operator=(SSceneObjectChange_Attribute&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSceneObjectChange_Attribute& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kAsInt = 2,
    kAsUint = 3,
    kAsFloat = 4,
    kAsDouble = 5,
    kAsString = 6,
    VALUE_NOT_SET = 0,
  };

  static inline const SSceneObjectChange_Attribute* internal_default_instance() {
    return reinterpret_cast<const SSceneObjectChange_Attribute*>(
               &_SSceneObjectChange_Attribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SSceneObjectChange_Attribute& a, SSceneObjectChange_Attribute& b) {
    a.Swap(&b);
  }
  inline void Swap(SSceneObjectChange_Attribute* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSceneObjectChange_Attribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSceneObjectChange_Attribute* New() const final {
    return CreateMaybeMessage<SSceneObjectChange_Attribute>(nullptr);
  }

  SSceneObjectChange_Attribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSceneObjectChange_Attribute>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSceneObjectChange_Attribute& from);
  void MergeFrom(const SSceneObjectChange_Attribute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSceneObjectChange_Attribute* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tdrp.packet.SSceneObjectChange.Attribute";
  }
  protected:
  explicit SSceneObjectChange_Attribute(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_SSceneObjectChange_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kAsIntFieldNumber = 2,
    kAsUintFieldNumber = 3,
    kAsFloatFieldNumber = 4,
    kAsDoubleFieldNumber = 5,
    kAsStringFieldNumber = 6,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int64 as_int = 2;
  bool has_as_int() const;
  private:
  bool _internal_has_as_int() const;
  public:
  void clear_as_int();
  ::PROTOBUF_NAMESPACE_ID::int64 as_int() const;
  void set_as_int(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_as_int() const;
  void _internal_set_as_int(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint64 as_uint = 3;
  bool has_as_uint() const;
  private:
  bool _internal_has_as_uint() const;
  public:
  void clear_as_uint();
  ::PROTOBUF_NAMESPACE_ID::uint64 as_uint() const;
  void set_as_uint(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_as_uint() const;
  void _internal_set_as_uint(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float as_float = 4;
  bool has_as_float() const;
  private:
  bool _internal_has_as_float() const;
  public:
  void clear_as_float();
  float as_float() const;
  void set_as_float(float value);
  private:
  float _internal_as_float() const;
  void _internal_set_as_float(float value);
  public:

  // double as_double = 5;
  bool has_as_double() const;
  private:
  bool _internal_has_as_double() const;
  public:
  void clear_as_double();
  double as_double() const;
  void set_as_double(double value);
  private:
  double _internal_as_double() const;
  void _internal_set_as_double(double value);
  public:

  // string as_string = 6;
  bool has_as_string() const;
  private:
  bool _internal_has_as_string() const;
  public:
  void clear_as_string();
  const std::string& as_string() const;
  void set_as_string(const std::string& value);
  void set_as_string(std::string&& value);
  void set_as_string(const char* value);
  void set_as_string(const char* value, size_t size);
  std::string* mutable_as_string();
  std::string* release_as_string();
  void set_allocated_as_string(std::string* as_string);
  private:
  const std::string& _internal_as_string() const;
  void _internal_set_as_string(const std::string& value);
  std::string* _internal_mutable_as_string();
  public:

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:tdrp.packet.SSceneObjectChange.Attribute)
 private:
  class _Internal;
  void set_has_as_int();
  void set_has_as_uint();
  void set_has_as_float();
  void set_has_as_double();
  void set_has_as_string();

  inline bool has_value() const;
  inline void clear_has_value();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  union ValueUnion {
    constexpr ValueUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::int64 as_int_;
    ::PROTOBUF_NAMESPACE_ID::uint64 as_uint_;
    float as_float_;
    double as_double_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr as_string_;
  } value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_SSceneObjectChange_2eproto;
};
// -------------------------------------------------------------------

class SSceneObjectChange PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tdrp.packet.SSceneObjectChange) */ {
 public:
  inline SSceneObjectChange() : SSceneObjectChange(nullptr) {}
  virtual ~SSceneObjectChange();
  explicit constexpr SSceneObjectChange(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SSceneObjectChange(const SSceneObjectChange& from);
  SSceneObjectChange(SSceneObjectChange&& from) noexcept
    : SSceneObjectChange() {
    *this = ::std::move(from);
  }

  inline SSceneObjectChange& operator=(const SSceneObjectChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSceneObjectChange& operator=(SSceneObjectChange&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSceneObjectChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const SSceneObjectChange* internal_default_instance() {
    return reinterpret_cast<const SSceneObjectChange*>(
               &_SSceneObjectChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SSceneObjectChange& a, SSceneObjectChange& b) {
    a.Swap(&b);
  }
  inline void Swap(SSceneObjectChange* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSceneObjectChange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSceneObjectChange* New() const final {
    return CreateMaybeMessage<SSceneObjectChange>(nullptr);
  }

  SSceneObjectChange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSceneObjectChange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSceneObjectChange& from);
  void MergeFrom(const SSceneObjectChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSceneObjectChange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tdrp.packet.SSceneObjectChange";
  }
  protected:
  explicit SSceneObjectChange(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_SSceneObjectChange_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef SSceneObjectChange_Attribute Attribute;

  // accessors -------------------------------------------------------

  enum : int {
    kPropertiesFieldNumber = 2,
    kAttributesFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // repeated .tdrp.packet.SSceneObjectChange.Attribute properties = 2;
  int properties_size() const;
  private:
  int _internal_properties_size() const;
  public:
  void clear_properties();
  ::tdrp::packet::SSceneObjectChange_Attribute* mutable_properties(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >*
      mutable_properties();
  private:
  const ::tdrp::packet::SSceneObjectChange_Attribute& _internal_properties(int index) const;
  ::tdrp::packet::SSceneObjectChange_Attribute* _internal_add_properties();
  public:
  const ::tdrp::packet::SSceneObjectChange_Attribute& properties(int index) const;
  ::tdrp::packet::SSceneObjectChange_Attribute* add_properties();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >&
      properties() const;

  // repeated .tdrp.packet.SSceneObjectChange.Attribute attributes = 3;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;
  public:
  void clear_attributes();
  ::tdrp::packet::SSceneObjectChange_Attribute* mutable_attributes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >*
      mutable_attributes();
  private:
  const ::tdrp::packet::SSceneObjectChange_Attribute& _internal_attributes(int index) const;
  ::tdrp::packet::SSceneObjectChange_Attribute* _internal_add_attributes();
  public:
  const ::tdrp::packet::SSceneObjectChange_Attribute& attributes(int index) const;
  ::tdrp::packet::SSceneObjectChange_Attribute* add_attributes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >&
      attributes() const;

  // fixed32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:tdrp.packet.SSceneObjectChange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute > properties_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute > attributes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SSceneObjectChange_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SSceneObjectChange_Attribute

// uint32 id = 1;
inline void SSceneObjectChange_Attribute::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSceneObjectChange_Attribute::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSceneObjectChange_Attribute::id() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.Attribute.id)
  return _internal_id();
}
inline void SSceneObjectChange_Attribute::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void SSceneObjectChange_Attribute::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.Attribute.id)
}

// int64 as_int = 2;
inline bool SSceneObjectChange_Attribute::_internal_has_as_int() const {
  return value_case() == kAsInt;
}
inline bool SSceneObjectChange_Attribute::has_as_int() const {
  return _internal_has_as_int();
}
inline void SSceneObjectChange_Attribute::set_has_as_int() {
  _oneof_case_[0] = kAsInt;
}
inline void SSceneObjectChange_Attribute::clear_as_int() {
  if (_internal_has_as_int()) {
    value_.as_int_ = PROTOBUF_LONGLONG(0);
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SSceneObjectChange_Attribute::_internal_as_int() const {
  if (_internal_has_as_int()) {
    return value_.as_int_;
  }
  return PROTOBUF_LONGLONG(0);
}
inline void SSceneObjectChange_Attribute::_internal_set_as_int(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!_internal_has_as_int()) {
    clear_value();
    set_has_as_int();
  }
  value_.as_int_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SSceneObjectChange_Attribute::as_int() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.Attribute.as_int)
  return _internal_as_int();
}
inline void SSceneObjectChange_Attribute::set_as_int(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_as_int(value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.Attribute.as_int)
}

// uint64 as_uint = 3;
inline bool SSceneObjectChange_Attribute::_internal_has_as_uint() const {
  return value_case() == kAsUint;
}
inline bool SSceneObjectChange_Attribute::has_as_uint() const {
  return _internal_has_as_uint();
}
inline void SSceneObjectChange_Attribute::set_has_as_uint() {
  _oneof_case_[0] = kAsUint;
}
inline void SSceneObjectChange_Attribute::clear_as_uint() {
  if (_internal_has_as_uint()) {
    value_.as_uint_ = PROTOBUF_ULONGLONG(0);
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSceneObjectChange_Attribute::_internal_as_uint() const {
  if (_internal_has_as_uint()) {
    return value_.as_uint_;
  }
  return PROTOBUF_ULONGLONG(0);
}
inline void SSceneObjectChange_Attribute::_internal_set_as_uint(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  if (!_internal_has_as_uint()) {
    clear_value();
    set_has_as_uint();
  }
  value_.as_uint_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSceneObjectChange_Attribute::as_uint() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.Attribute.as_uint)
  return _internal_as_uint();
}
inline void SSceneObjectChange_Attribute::set_as_uint(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_as_uint(value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.Attribute.as_uint)
}

// float as_float = 4;
inline bool SSceneObjectChange_Attribute::_internal_has_as_float() const {
  return value_case() == kAsFloat;
}
inline bool SSceneObjectChange_Attribute::has_as_float() const {
  return _internal_has_as_float();
}
inline void SSceneObjectChange_Attribute::set_has_as_float() {
  _oneof_case_[0] = kAsFloat;
}
inline void SSceneObjectChange_Attribute::clear_as_float() {
  if (_internal_has_as_float()) {
    value_.as_float_ = 0;
    clear_has_value();
  }
}
inline float SSceneObjectChange_Attribute::_internal_as_float() const {
  if (_internal_has_as_float()) {
    return value_.as_float_;
  }
  return 0;
}
inline void SSceneObjectChange_Attribute::_internal_set_as_float(float value) {
  if (!_internal_has_as_float()) {
    clear_value();
    set_has_as_float();
  }
  value_.as_float_ = value;
}
inline float SSceneObjectChange_Attribute::as_float() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.Attribute.as_float)
  return _internal_as_float();
}
inline void SSceneObjectChange_Attribute::set_as_float(float value) {
  _internal_set_as_float(value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.Attribute.as_float)
}

// double as_double = 5;
inline bool SSceneObjectChange_Attribute::_internal_has_as_double() const {
  return value_case() == kAsDouble;
}
inline bool SSceneObjectChange_Attribute::has_as_double() const {
  return _internal_has_as_double();
}
inline void SSceneObjectChange_Attribute::set_has_as_double() {
  _oneof_case_[0] = kAsDouble;
}
inline void SSceneObjectChange_Attribute::clear_as_double() {
  if (_internal_has_as_double()) {
    value_.as_double_ = 0;
    clear_has_value();
  }
}
inline double SSceneObjectChange_Attribute::_internal_as_double() const {
  if (_internal_has_as_double()) {
    return value_.as_double_;
  }
  return 0;
}
inline void SSceneObjectChange_Attribute::_internal_set_as_double(double value) {
  if (!_internal_has_as_double()) {
    clear_value();
    set_has_as_double();
  }
  value_.as_double_ = value;
}
inline double SSceneObjectChange_Attribute::as_double() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.Attribute.as_double)
  return _internal_as_double();
}
inline void SSceneObjectChange_Attribute::set_as_double(double value) {
  _internal_set_as_double(value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.Attribute.as_double)
}

// string as_string = 6;
inline bool SSceneObjectChange_Attribute::_internal_has_as_string() const {
  return value_case() == kAsString;
}
inline bool SSceneObjectChange_Attribute::has_as_string() const {
  return _internal_has_as_string();
}
inline void SSceneObjectChange_Attribute::set_has_as_string() {
  _oneof_case_[0] = kAsString;
}
inline void SSceneObjectChange_Attribute::clear_as_string() {
  if (_internal_has_as_string()) {
    value_.as_string_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_value();
  }
}
inline const std::string& SSceneObjectChange_Attribute::as_string() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.Attribute.as_string)
  return _internal_as_string();
}
inline void SSceneObjectChange_Attribute::set_as_string(const std::string& value) {
  _internal_set_as_string(value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.Attribute.as_string)
}
inline std::string* SSceneObjectChange_Attribute::mutable_as_string() {
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectChange.Attribute.as_string)
  return _internal_mutable_as_string();
}
inline const std::string& SSceneObjectChange_Attribute::_internal_as_string() const {
  if (_internal_has_as_string()) {
    return value_.as_string_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void SSceneObjectChange_Attribute::_internal_set_as_string(const std::string& value) {
  if (!_internal_has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SSceneObjectChange_Attribute::set_as_string(std::string&& value) {
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.Attribute.as_string)
  if (!_internal_has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:tdrp.packet.SSceneObjectChange.Attribute.as_string)
}
inline void SSceneObjectChange_Attribute::set_as_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:tdrp.packet.SSceneObjectChange.Attribute.as_string)
}
inline void SSceneObjectChange_Attribute::set_as_string(const char* value,
                             size_t size) {
  if (!_internal_has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:tdrp.packet.SSceneObjectChange.Attribute.as_string)
}
inline std::string* SSceneObjectChange_Attribute::_internal_mutable_as_string() {
  if (!_internal_has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return value_.as_string_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SSceneObjectChange_Attribute::release_as_string() {
  // @@protoc_insertion_point(field_release:tdrp.packet.SSceneObjectChange.Attribute.as_string)
  if (_internal_has_as_string()) {
    clear_has_value();
    return value_.as_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void SSceneObjectChange_Attribute::set_allocated_as_string(std::string* as_string) {
  if (has_value()) {
    clear_value();
  }
  if (as_string != nullptr) {
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(as_string);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(as_string);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:tdrp.packet.SSceneObjectChange.Attribute.as_string)
}

inline bool SSceneObjectChange_Attribute::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void SSceneObjectChange_Attribute::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline SSceneObjectChange_Attribute::ValueCase SSceneObjectChange_Attribute::value_case() const {
  return SSceneObjectChange_Attribute::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SSceneObjectChange

// fixed32 id = 1;
inline void SSceneObjectChange::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSceneObjectChange::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSceneObjectChange::id() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.id)
  return _internal_id();
}
inline void SSceneObjectChange::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void SSceneObjectChange::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectChange.id)
}

// repeated .tdrp.packet.SSceneObjectChange.Attribute properties = 2;
inline int SSceneObjectChange::_internal_properties_size() const {
  return properties_.size();
}
inline int SSceneObjectChange::properties_size() const {
  return _internal_properties_size();
}
inline void SSceneObjectChange::clear_properties() {
  properties_.Clear();
}
inline ::tdrp::packet::SSceneObjectChange_Attribute* SSceneObjectChange::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectChange.properties)
  return properties_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >*
SSceneObjectChange::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:tdrp.packet.SSceneObjectChange.properties)
  return &properties_;
}
inline const ::tdrp::packet::SSceneObjectChange_Attribute& SSceneObjectChange::_internal_properties(int index) const {
  return properties_.Get(index);
}
inline const ::tdrp::packet::SSceneObjectChange_Attribute& SSceneObjectChange::properties(int index) const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.properties)
  return _internal_properties(index);
}
inline ::tdrp::packet::SSceneObjectChange_Attribute* SSceneObjectChange::_internal_add_properties() {
  return properties_.Add();
}
inline ::tdrp::packet::SSceneObjectChange_Attribute* SSceneObjectChange::add_properties() {
  // @@protoc_insertion_point(field_add:tdrp.packet.SSceneObjectChange.properties)
  return _internal_add_properties();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >&
SSceneObjectChange::properties() const {
  // @@protoc_insertion_point(field_list:tdrp.packet.SSceneObjectChange.properties)
  return properties_;
}

// repeated .tdrp.packet.SSceneObjectChange.Attribute attributes = 3;
inline int SSceneObjectChange::_internal_attributes_size() const {
  return attributes_.size();
}
inline int SSceneObjectChange::attributes_size() const {
  return _internal_attributes_size();
}
inline void SSceneObjectChange::clear_attributes() {
  attributes_.Clear();
}
inline ::tdrp::packet::SSceneObjectChange_Attribute* SSceneObjectChange::mutable_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectChange.attributes)
  return attributes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >*
SSceneObjectChange::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:tdrp.packet.SSceneObjectChange.attributes)
  return &attributes_;
}
inline const ::tdrp::packet::SSceneObjectChange_Attribute& SSceneObjectChange::_internal_attributes(int index) const {
  return attributes_.Get(index);
}
inline const ::tdrp::packet::SSceneObjectChange_Attribute& SSceneObjectChange::attributes(int index) const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectChange.attributes)
  return _internal_attributes(index);
}
inline ::tdrp::packet::SSceneObjectChange_Attribute* SSceneObjectChange::_internal_add_attributes() {
  return attributes_.Add();
}
inline ::tdrp::packet::SSceneObjectChange_Attribute* SSceneObjectChange::add_attributes() {
  // @@protoc_insertion_point(field_add:tdrp.packet.SSceneObjectChange.attributes)
  return _internal_add_attributes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tdrp::packet::SSceneObjectChange_Attribute >&
SSceneObjectChange::attributes() const {
  // @@protoc_insertion_point(field_list:tdrp.packet.SSceneObjectChange.attributes)
  return attributes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet
}  // namespace tdrp

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_SSceneObjectChange_2eproto

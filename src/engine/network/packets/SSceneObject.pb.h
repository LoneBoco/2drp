// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SSceneObject.proto

#ifndef PROTOBUF_SSceneObject_2eproto__INCLUDED
#define PROTOBUF_SSceneObject_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_SSceneObject_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSSceneObjectAdd_AttributeImpl();
void InitDefaultsSSceneObjectAdd_Attribute();
void InitDefaultsSSceneObjectAddImpl();
void InitDefaultsSSceneObjectAdd();
inline void InitDefaults() {
  InitDefaultsSSceneObjectAdd_Attribute();
  InitDefaultsSSceneObjectAdd();
}
}  // namespace protobuf_SSceneObject_2eproto
namespace tdrp {
namespace packet {
class SSceneObjectAdd;
class SSceneObjectAddDefaultTypeInternal;
extern SSceneObjectAddDefaultTypeInternal _SSceneObjectAdd_default_instance_;
class SSceneObjectAdd_Attribute;
class SSceneObjectAdd_AttributeDefaultTypeInternal;
extern SSceneObjectAdd_AttributeDefaultTypeInternal _SSceneObjectAdd_Attribute_default_instance_;
}  // namespace packet
}  // namespace tdrp
namespace tdrp {
namespace packet {

// ===================================================================

class SSceneObjectAdd_Attribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tdrp.packet.SSceneObjectAdd.Attribute) */ {
 public:
  SSceneObjectAdd_Attribute();
  virtual ~SSceneObjectAdd_Attribute();

  SSceneObjectAdd_Attribute(const SSceneObjectAdd_Attribute& from);

  inline SSceneObjectAdd_Attribute& operator=(const SSceneObjectAdd_Attribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SSceneObjectAdd_Attribute(SSceneObjectAdd_Attribute&& from) noexcept
    : SSceneObjectAdd_Attribute() {
    *this = ::std::move(from);
  }

  inline SSceneObjectAdd_Attribute& operator=(SSceneObjectAdd_Attribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SSceneObjectAdd_Attribute& default_instance();

  enum ValueCase {
    kAsInt = 3,
    kAsUint = 4,
    kAsFloat = 5,
    kAsDouble = 6,
    kAsString = 7,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SSceneObjectAdd_Attribute* internal_default_instance() {
    return reinterpret_cast<const SSceneObjectAdd_Attribute*>(
               &_SSceneObjectAdd_Attribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SSceneObjectAdd_Attribute* other);
  friend void swap(SSceneObjectAdd_Attribute& a, SSceneObjectAdd_Attribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SSceneObjectAdd_Attribute* New() const PROTOBUF_FINAL { return New(NULL); }

  SSceneObjectAdd_Attribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SSceneObjectAdd_Attribute& from);
  void MergeFrom(const SSceneObjectAdd_Attribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SSceneObjectAdd_Attribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // int64 as_int = 3;
  private:
  bool has_as_int() const;
  public:
  void clear_as_int();
  static const int kAsIntFieldNumber = 3;
  ::google::protobuf::int64 as_int() const;
  void set_as_int(::google::protobuf::int64 value);

  // uint64 as_uint = 4;
  private:
  bool has_as_uint() const;
  public:
  void clear_as_uint();
  static const int kAsUintFieldNumber = 4;
  ::google::protobuf::uint64 as_uint() const;
  void set_as_uint(::google::protobuf::uint64 value);

  // float as_float = 5;
  private:
  bool has_as_float() const;
  public:
  void clear_as_float();
  static const int kAsFloatFieldNumber = 5;
  float as_float() const;
  void set_as_float(float value);

  // double as_double = 6;
  private:
  bool has_as_double() const;
  public:
  void clear_as_double();
  static const int kAsDoubleFieldNumber = 6;
  double as_double() const;
  void set_as_double(double value);

  // string as_string = 7;
  private:
  bool has_as_string() const;
  public:
  void clear_as_string();
  static const int kAsStringFieldNumber = 7;
  const ::std::string& as_string() const;
  void set_as_string(const ::std::string& value);
  #if LANG_CXX11
  void set_as_string(::std::string&& value);
  #endif
  void set_as_string(const char* value);
  void set_as_string(const char* value, size_t size);
  ::std::string* mutable_as_string();
  ::std::string* release_as_string();
  void set_allocated_as_string(::std::string* as_string);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:tdrp.packet.SSceneObjectAdd.Attribute)
 private:
  void set_has_as_int();
  void set_has_as_uint();
  void set_has_as_float();
  void set_has_as_double();
  void set_has_as_string();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::int64 as_int_;
    ::google::protobuf::uint64 as_uint_;
    float as_float_;
    double as_double_;
    ::google::protobuf::internal::ArenaStringPtr as_string_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_SSceneObject_2eproto::TableStruct;
  friend void ::protobuf_SSceneObject_2eproto::InitDefaultsSSceneObjectAdd_AttributeImpl();
};
// -------------------------------------------------------------------

class SSceneObjectAdd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tdrp.packet.SSceneObjectAdd) */ {
 public:
  SSceneObjectAdd();
  virtual ~SSceneObjectAdd();

  SSceneObjectAdd(const SSceneObjectAdd& from);

  inline SSceneObjectAdd& operator=(const SSceneObjectAdd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SSceneObjectAdd(SSceneObjectAdd&& from) noexcept
    : SSceneObjectAdd() {
    *this = ::std::move(from);
  }

  inline SSceneObjectAdd& operator=(SSceneObjectAdd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SSceneObjectAdd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SSceneObjectAdd* internal_default_instance() {
    return reinterpret_cast<const SSceneObjectAdd*>(
               &_SSceneObjectAdd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SSceneObjectAdd* other);
  friend void swap(SSceneObjectAdd& a, SSceneObjectAdd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SSceneObjectAdd* New() const PROTOBUF_FINAL { return New(NULL); }

  SSceneObjectAdd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SSceneObjectAdd& from);
  void MergeFrom(const SSceneObjectAdd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SSceneObjectAdd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SSceneObjectAdd_Attribute Attribute;

  // accessors -------------------------------------------------------

  // repeated .tdrp.packet.SSceneObjectAdd.Attribute properties = 5;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 5;
  const ::tdrp::packet::SSceneObjectAdd_Attribute& properties(int index) const;
  ::tdrp::packet::SSceneObjectAdd_Attribute* mutable_properties(int index);
  ::tdrp::packet::SSceneObjectAdd_Attribute* add_properties();
  ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >*
      mutable_properties();
  const ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >&
      properties() const;

  // repeated .tdrp.packet.SSceneObjectAdd.Attribute attributes = 6;
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 6;
  const ::tdrp::packet::SSceneObjectAdd_Attribute& attributes(int index) const;
  ::tdrp::packet::SSceneObjectAdd_Attribute* mutable_attributes(int index);
  ::tdrp::packet::SSceneObjectAdd_Attribute* add_attributes();
  ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >*
      mutable_attributes();
  const ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >&
      attributes() const;

  // string class = 3;
  void clear_class_();
  static const int kClassFieldNumber = 3;
  const ::std::string& class_() const;
  void set_class_(const ::std::string& value);
  #if LANG_CXX11
  void set_class_(::std::string&& value);
  #endif
  void set_class_(const char* value);
  void set_class_(const char* value, size_t size);
  ::std::string* mutable_class_();
  ::std::string* release_class_();
  void set_allocated_class_(::std::string* class_);

  // string script = 4;
  void clear_script();
  static const int kScriptFieldNumber = 4;
  const ::std::string& script() const;
  void set_script(const ::std::string& value);
  #if LANG_CXX11
  void set_script(::std::string&& value);
  #endif
  void set_script(const char* value);
  void set_script(const char* value, size_t size);
  ::std::string* mutable_script();
  ::std::string* release_script();
  void set_allocated_script(::std::string* script);

  // fixed64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tdrp.packet.SSceneObjectAdd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute > properties_;
  ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute > attributes_;
  ::google::protobuf::internal::ArenaStringPtr class__;
  ::google::protobuf::internal::ArenaStringPtr script_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_SSceneObject_2eproto::TableStruct;
  friend void ::protobuf_SSceneObject_2eproto::InitDefaultsSSceneObjectAddImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SSceneObjectAdd_Attribute

// uint32 id = 1;
inline void SSceneObjectAdd_Attribute::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SSceneObjectAdd_Attribute::id() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.Attribute.id)
  return id_;
}
inline void SSceneObjectAdd_Attribute::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.id)
}

// uint32 type = 2;
inline void SSceneObjectAdd_Attribute::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 SSceneObjectAdd_Attribute::type() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.Attribute.type)
  return type_;
}
inline void SSceneObjectAdd_Attribute::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.type)
}

// int64 as_int = 3;
inline bool SSceneObjectAdd_Attribute::has_as_int() const {
  return value_case() == kAsInt;
}
inline void SSceneObjectAdd_Attribute::set_has_as_int() {
  _oneof_case_[0] = kAsInt;
}
inline void SSceneObjectAdd_Attribute::clear_as_int() {
  if (has_as_int()) {
    value_.as_int_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 SSceneObjectAdd_Attribute::as_int() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.Attribute.as_int)
  if (has_as_int()) {
    return value_.as_int_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void SSceneObjectAdd_Attribute::set_as_int(::google::protobuf::int64 value) {
  if (!has_as_int()) {
    clear_value();
    set_has_as_int();
  }
  value_.as_int_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.as_int)
}

// uint64 as_uint = 4;
inline bool SSceneObjectAdd_Attribute::has_as_uint() const {
  return value_case() == kAsUint;
}
inline void SSceneObjectAdd_Attribute::set_has_as_uint() {
  _oneof_case_[0] = kAsUint;
}
inline void SSceneObjectAdd_Attribute::clear_as_uint() {
  if (has_as_uint()) {
    value_.as_uint_ = GOOGLE_ULONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::uint64 SSceneObjectAdd_Attribute::as_uint() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.Attribute.as_uint)
  if (has_as_uint()) {
    return value_.as_uint_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void SSceneObjectAdd_Attribute::set_as_uint(::google::protobuf::uint64 value) {
  if (!has_as_uint()) {
    clear_value();
    set_has_as_uint();
  }
  value_.as_uint_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.as_uint)
}

// float as_float = 5;
inline bool SSceneObjectAdd_Attribute::has_as_float() const {
  return value_case() == kAsFloat;
}
inline void SSceneObjectAdd_Attribute::set_has_as_float() {
  _oneof_case_[0] = kAsFloat;
}
inline void SSceneObjectAdd_Attribute::clear_as_float() {
  if (has_as_float()) {
    value_.as_float_ = 0;
    clear_has_value();
  }
}
inline float SSceneObjectAdd_Attribute::as_float() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.Attribute.as_float)
  if (has_as_float()) {
    return value_.as_float_;
  }
  return 0;
}
inline void SSceneObjectAdd_Attribute::set_as_float(float value) {
  if (!has_as_float()) {
    clear_value();
    set_has_as_float();
  }
  value_.as_float_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.as_float)
}

// double as_double = 6;
inline bool SSceneObjectAdd_Attribute::has_as_double() const {
  return value_case() == kAsDouble;
}
inline void SSceneObjectAdd_Attribute::set_has_as_double() {
  _oneof_case_[0] = kAsDouble;
}
inline void SSceneObjectAdd_Attribute::clear_as_double() {
  if (has_as_double()) {
    value_.as_double_ = 0;
    clear_has_value();
  }
}
inline double SSceneObjectAdd_Attribute::as_double() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.Attribute.as_double)
  if (has_as_double()) {
    return value_.as_double_;
  }
  return 0;
}
inline void SSceneObjectAdd_Attribute::set_as_double(double value) {
  if (!has_as_double()) {
    clear_value();
    set_has_as_double();
  }
  value_.as_double_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.as_double)
}

// string as_string = 7;
inline bool SSceneObjectAdd_Attribute::has_as_string() const {
  return value_case() == kAsString;
}
inline void SSceneObjectAdd_Attribute::set_has_as_string() {
  _oneof_case_[0] = kAsString;
}
inline void SSceneObjectAdd_Attribute::clear_as_string() {
  if (has_as_string()) {
    value_.as_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& SSceneObjectAdd_Attribute::as_string() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
  if (has_as_string()) {
    return value_.as_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void SSceneObjectAdd_Attribute::set_as_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
  if (!has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
}
#if LANG_CXX11
inline void SSceneObjectAdd_Attribute::set_as_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
  if (!has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
}
#endif
inline void SSceneObjectAdd_Attribute::set_as_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
}
inline void SSceneObjectAdd_Attribute::set_as_string(const char* value, size_t size) {
  if (!has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.as_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
}
inline ::std::string* SSceneObjectAdd_Attribute::mutable_as_string() {
  if (!has_as_string()) {
    clear_value();
    set_has_as_string();
    value_.as_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
  return value_.as_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSceneObjectAdd_Attribute::release_as_string() {
  // @@protoc_insertion_point(field_release:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
  if (has_as_string()) {
    clear_has_value();
    return value_.as_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void SSceneObjectAdd_Attribute::set_allocated_as_string(::std::string* as_string) {
  if (!has_as_string()) {
    value_.as_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (as_string != NULL) {
    set_has_as_string();
    value_.as_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        as_string);
  }
  // @@protoc_insertion_point(field_set_allocated:tdrp.packet.SSceneObjectAdd.Attribute.as_string)
}

inline bool SSceneObjectAdd_Attribute::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void SSceneObjectAdd_Attribute::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline SSceneObjectAdd_Attribute::ValueCase SSceneObjectAdd_Attribute::value_case() const {
  return SSceneObjectAdd_Attribute::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SSceneObjectAdd

// fixed64 id = 1;
inline void SSceneObjectAdd::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SSceneObjectAdd::id() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.id)
  return id_;
}
inline void SSceneObjectAdd::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.id)
}

// uint32 type = 2;
inline void SSceneObjectAdd::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 SSceneObjectAdd::type() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.type)
  return type_;
}
inline void SSceneObjectAdd::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.type)
}

// string class = 3;
inline void SSceneObjectAdd::clear_class_() {
  class__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SSceneObjectAdd::class_() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.class)
  return class__.GetNoArena();
}
inline void SSceneObjectAdd::set_class_(const ::std::string& value) {
  
  class__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.class)
}
#if LANG_CXX11
inline void SSceneObjectAdd::set_class_(::std::string&& value) {
  
  class__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tdrp.packet.SSceneObjectAdd.class)
}
#endif
inline void SSceneObjectAdd::set_class_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tdrp.packet.SSceneObjectAdd.class)
}
inline void SSceneObjectAdd::set_class_(const char* value, size_t size) {
  
  class__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tdrp.packet.SSceneObjectAdd.class)
}
inline ::std::string* SSceneObjectAdd::mutable_class_() {
  
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectAdd.class)
  return class__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSceneObjectAdd::release_class_() {
  // @@protoc_insertion_point(field_release:tdrp.packet.SSceneObjectAdd.class)
  
  return class__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSceneObjectAdd::set_allocated_class_(::std::string* class_) {
  if (class_ != NULL) {
    
  } else {
    
  }
  class__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_);
  // @@protoc_insertion_point(field_set_allocated:tdrp.packet.SSceneObjectAdd.class)
}

// string script = 4;
inline void SSceneObjectAdd::clear_script() {
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SSceneObjectAdd::script() const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.script)
  return script_.GetNoArena();
}
inline void SSceneObjectAdd::set_script(const ::std::string& value) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tdrp.packet.SSceneObjectAdd.script)
}
#if LANG_CXX11
inline void SSceneObjectAdd::set_script(::std::string&& value) {
  
  script_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tdrp.packet.SSceneObjectAdd.script)
}
#endif
inline void SSceneObjectAdd::set_script(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tdrp.packet.SSceneObjectAdd.script)
}
inline void SSceneObjectAdd::set_script(const char* value, size_t size) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tdrp.packet.SSceneObjectAdd.script)
}
inline ::std::string* SSceneObjectAdd::mutable_script() {
  
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectAdd.script)
  return script_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSceneObjectAdd::release_script() {
  // @@protoc_insertion_point(field_release:tdrp.packet.SSceneObjectAdd.script)
  
  return script_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSceneObjectAdd::set_allocated_script(::std::string* script) {
  if (script != NULL) {
    
  } else {
    
  }
  script_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script);
  // @@protoc_insertion_point(field_set_allocated:tdrp.packet.SSceneObjectAdd.script)
}

// repeated .tdrp.packet.SSceneObjectAdd.Attribute properties = 5;
inline int SSceneObjectAdd::properties_size() const {
  return properties_.size();
}
inline void SSceneObjectAdd::clear_properties() {
  properties_.Clear();
}
inline const ::tdrp::packet::SSceneObjectAdd_Attribute& SSceneObjectAdd::properties(int index) const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.properties)
  return properties_.Get(index);
}
inline ::tdrp::packet::SSceneObjectAdd_Attribute* SSceneObjectAdd::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectAdd.properties)
  return properties_.Mutable(index);
}
inline ::tdrp::packet::SSceneObjectAdd_Attribute* SSceneObjectAdd::add_properties() {
  // @@protoc_insertion_point(field_add:tdrp.packet.SSceneObjectAdd.properties)
  return properties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >*
SSceneObjectAdd::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:tdrp.packet.SSceneObjectAdd.properties)
  return &properties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >&
SSceneObjectAdd::properties() const {
  // @@protoc_insertion_point(field_list:tdrp.packet.SSceneObjectAdd.properties)
  return properties_;
}

// repeated .tdrp.packet.SSceneObjectAdd.Attribute attributes = 6;
inline int SSceneObjectAdd::attributes_size() const {
  return attributes_.size();
}
inline void SSceneObjectAdd::clear_attributes() {
  attributes_.Clear();
}
inline const ::tdrp::packet::SSceneObjectAdd_Attribute& SSceneObjectAdd::attributes(int index) const {
  // @@protoc_insertion_point(field_get:tdrp.packet.SSceneObjectAdd.attributes)
  return attributes_.Get(index);
}
inline ::tdrp::packet::SSceneObjectAdd_Attribute* SSceneObjectAdd::mutable_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:tdrp.packet.SSceneObjectAdd.attributes)
  return attributes_.Mutable(index);
}
inline ::tdrp::packet::SSceneObjectAdd_Attribute* SSceneObjectAdd::add_attributes() {
  // @@protoc_insertion_point(field_add:tdrp.packet.SSceneObjectAdd.attributes)
  return attributes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >*
SSceneObjectAdd::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:tdrp.packet.SSceneObjectAdd.attributes)
  return &attributes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tdrp::packet::SSceneObjectAdd_Attribute >&
SSceneObjectAdd::attributes() const {
  // @@protoc_insertion_point(field_list:tdrp.packet.SSceneObjectAdd.attributes)
  return attributes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet
}  // namespace tdrp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SSceneObject_2eproto__INCLUDED

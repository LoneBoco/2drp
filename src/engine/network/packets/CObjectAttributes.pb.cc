// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CObjectAttributes.proto

#include "CObjectAttributes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tdrp {
namespace packet {
class CObjectAttributes_AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CObjectAttributes_Attribute>
      _instance;
  ::google::protobuf::int64 as_int_;
  ::google::protobuf::uint64 as_uint_;
  float as_float_;
  double as_double_;
  ::google::protobuf::internal::ArenaStringPtr as_string_;
} _CObjectAttributes_Attribute_default_instance_;
class CObjectAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CObjectAttributes>
      _instance;
} _CObjectAttributes_default_instance_;
}  // namespace packet
}  // namespace tdrp
namespace protobuf_CObjectAttributes_2eproto {
void InitDefaultsCObjectAttributes_AttributeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tdrp::packet::_CObjectAttributes_Attribute_default_instance_;
    new (ptr) ::tdrp::packet::CObjectAttributes_Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdrp::packet::CObjectAttributes_Attribute::InitAsDefaultInstance();
}

void InitDefaultsCObjectAttributes_Attribute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCObjectAttributes_AttributeImpl);
}

void InitDefaultsCObjectAttributesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_CObjectAttributes_2eproto::InitDefaultsCObjectAttributes_Attribute();
  {
    void* ptr = &::tdrp::packet::_CObjectAttributes_default_instance_;
    new (ptr) ::tdrp::packet::CObjectAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tdrp::packet::CObjectAttributes::InitAsDefaultInstance();
}

void InitDefaultsCObjectAttributes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCObjectAttributesImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes_Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes_Attribute, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes_Attribute, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes_Attribute, type_),
  offsetof(::tdrp::packet::CObjectAttributes_AttributeDefaultTypeInternal, as_int_),
  offsetof(::tdrp::packet::CObjectAttributes_AttributeDefaultTypeInternal, as_uint_),
  offsetof(::tdrp::packet::CObjectAttributes_AttributeDefaultTypeInternal, as_float_),
  offsetof(::tdrp::packet::CObjectAttributes_AttributeDefaultTypeInternal, as_double_),
  offsetof(::tdrp::packet::CObjectAttributes_AttributeDefaultTypeInternal, as_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes_Attribute, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tdrp::packet::CObjectAttributes, attributes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tdrp::packet::CObjectAttributes_Attribute)},
  { 13, -1, sizeof(::tdrp::packet::CObjectAttributes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdrp::packet::_CObjectAttributes_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tdrp::packet::_CObjectAttributes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CObjectAttributes.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027CObjectAttributes.proto\022\013tdrp.packet\"\361"
      "\001\n\021CObjectAttributes\022\n\n\002id\030\001 \001(\007\022<\n\nattr"
      "ibutes\030\002 \003(\0132(.tdrp.packet.CObjectAttrib"
      "utes.Attribute\032\221\001\n\tAttribute\022\n\n\002id\030\001 \001(\r"
      "\022\014\n\004type\030\002 \001(\r\022\020\n\006as_int\030\003 \001(\003H\000\022\021\n\007as_u"
      "int\030\004 \001(\004H\000\022\022\n\010as_float\030\005 \001(\002H\000\022\023\n\tas_do"
      "uble\030\006 \001(\001H\000\022\023\n\tas_string\030\007 \001(\tH\000B\007\n\005val"
      "ueb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 290);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CObjectAttributes.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_CObjectAttributes_2eproto
namespace tdrp {
namespace packet {

// ===================================================================

void CObjectAttributes_Attribute::InitAsDefaultInstance() {
  ::tdrp::packet::_CObjectAttributes_Attribute_default_instance_.as_int_ = GOOGLE_LONGLONG(0);
  ::tdrp::packet::_CObjectAttributes_Attribute_default_instance_.as_uint_ = GOOGLE_ULONGLONG(0);
  ::tdrp::packet::_CObjectAttributes_Attribute_default_instance_.as_float_ = 0;
  ::tdrp::packet::_CObjectAttributes_Attribute_default_instance_.as_double_ = 0;
  ::tdrp::packet::_CObjectAttributes_Attribute_default_instance_.as_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CObjectAttributes_Attribute::kIdFieldNumber;
const int CObjectAttributes_Attribute::kTypeFieldNumber;
const int CObjectAttributes_Attribute::kAsIntFieldNumber;
const int CObjectAttributes_Attribute::kAsUintFieldNumber;
const int CObjectAttributes_Attribute::kAsFloatFieldNumber;
const int CObjectAttributes_Attribute::kAsDoubleFieldNumber;
const int CObjectAttributes_Attribute::kAsStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CObjectAttributes_Attribute::CObjectAttributes_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CObjectAttributes_2eproto::InitDefaultsCObjectAttributes_Attribute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdrp.packet.CObjectAttributes.Attribute)
}
CObjectAttributes_Attribute::CObjectAttributes_Attribute(const CObjectAttributes_Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  clear_has_value();
  switch (from.value_case()) {
    case kAsInt: {
      set_as_int(from.as_int());
      break;
    }
    case kAsUint: {
      set_as_uint(from.as_uint());
      break;
    }
    case kAsFloat: {
      set_as_float(from.as_float());
      break;
    }
    case kAsDouble: {
      set_as_double(from.as_double());
      break;
    }
    case kAsString: {
      set_as_string(from.as_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tdrp.packet.CObjectAttributes.Attribute)
}

void CObjectAttributes_Attribute::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  clear_has_value();
  _cached_size_ = 0;
}

CObjectAttributes_Attribute::~CObjectAttributes_Attribute() {
  // @@protoc_insertion_point(destructor:tdrp.packet.CObjectAttributes.Attribute)
  SharedDtor();
}

void CObjectAttributes_Attribute::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void CObjectAttributes_Attribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CObjectAttributes_Attribute::descriptor() {
  ::protobuf_CObjectAttributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CObjectAttributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CObjectAttributes_Attribute& CObjectAttributes_Attribute::default_instance() {
  ::protobuf_CObjectAttributes_2eproto::InitDefaultsCObjectAttributes_Attribute();
  return *internal_default_instance();
}

CObjectAttributes_Attribute* CObjectAttributes_Attribute::New(::google::protobuf::Arena* arena) const {
  CObjectAttributes_Attribute* n = new CObjectAttributes_Attribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CObjectAttributes_Attribute::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:tdrp.packet.CObjectAttributes.Attribute)
  switch (value_case()) {
    case kAsInt: {
      // No need to clear
      break;
    }
    case kAsUint: {
      // No need to clear
      break;
    }
    case kAsFloat: {
      // No need to clear
      break;
    }
    case kAsDouble: {
      // No need to clear
      break;
    }
    case kAsString: {
      value_.as_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void CObjectAttributes_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:tdrp.packet.CObjectAttributes.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  clear_value();
  _internal_metadata_.Clear();
}

bool CObjectAttributes_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdrp.packet.CObjectAttributes.Attribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 as_int = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.as_int_)));
          set_has_as_int();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 as_uint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.as_uint_)));
          set_has_as_uint();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float as_float = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.as_float_)));
          set_has_as_float();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double as_double = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.as_double_)));
          set_has_as_double();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string as_string = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_as_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->as_string().data(), static_cast<int>(this->as_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tdrp.packet.CObjectAttributes.Attribute.as_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdrp.packet.CObjectAttributes.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdrp.packet.CObjectAttributes.Attribute)
  return false;
#undef DO_
}

void CObjectAttributes_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdrp.packet.CObjectAttributes.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // int64 as_int = 3;
  if (has_as_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->as_int(), output);
  }

  // uint64 as_uint = 4;
  if (has_as_uint()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->as_uint(), output);
  }

  // float as_float = 5;
  if (has_as_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->as_float(), output);
  }

  // double as_double = 6;
  if (has_as_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->as_double(), output);
  }

  // string as_string = 7;
  if (has_as_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->as_string().data(), static_cast<int>(this->as_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdrp.packet.CObjectAttributes.Attribute.as_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->as_string(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdrp.packet.CObjectAttributes.Attribute)
}

::google::protobuf::uint8* CObjectAttributes_Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdrp.packet.CObjectAttributes.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // int64 as_int = 3;
  if (has_as_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->as_int(), target);
  }

  // uint64 as_uint = 4;
  if (has_as_uint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->as_uint(), target);
  }

  // float as_float = 5;
  if (has_as_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->as_float(), target);
  }

  // double as_double = 6;
  if (has_as_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->as_double(), target);
  }

  // string as_string = 7;
  if (has_as_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->as_string().data(), static_cast<int>(this->as_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tdrp.packet.CObjectAttributes.Attribute.as_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->as_string(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdrp.packet.CObjectAttributes.Attribute)
  return target;
}

size_t CObjectAttributes_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdrp.packet.CObjectAttributes.Attribute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  switch (value_case()) {
    // int64 as_int = 3;
    case kAsInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->as_int());
      break;
    }
    // uint64 as_uint = 4;
    case kAsUint: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->as_uint());
      break;
    }
    // float as_float = 5;
    case kAsFloat: {
      total_size += 1 + 4;
      break;
    }
    // double as_double = 6;
    case kAsDouble: {
      total_size += 1 + 8;
      break;
    }
    // string as_string = 7;
    case kAsString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->as_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CObjectAttributes_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdrp.packet.CObjectAttributes.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const CObjectAttributes_Attribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CObjectAttributes_Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdrp.packet.CObjectAttributes.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdrp.packet.CObjectAttributes.Attribute)
    MergeFrom(*source);
  }
}

void CObjectAttributes_Attribute::MergeFrom(const CObjectAttributes_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdrp.packet.CObjectAttributes.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.value_case()) {
    case kAsInt: {
      set_as_int(from.as_int());
      break;
    }
    case kAsUint: {
      set_as_uint(from.as_uint());
      break;
    }
    case kAsFloat: {
      set_as_float(from.as_float());
      break;
    }
    case kAsDouble: {
      set_as_double(from.as_double());
      break;
    }
    case kAsString: {
      set_as_string(from.as_string());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void CObjectAttributes_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdrp.packet.CObjectAttributes.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CObjectAttributes_Attribute::CopyFrom(const CObjectAttributes_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdrp.packet.CObjectAttributes.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CObjectAttributes_Attribute::IsInitialized() const {
  return true;
}

void CObjectAttributes_Attribute::Swap(CObjectAttributes_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CObjectAttributes_Attribute::InternalSwap(CObjectAttributes_Attribute* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CObjectAttributes_Attribute::GetMetadata() const {
  protobuf_CObjectAttributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CObjectAttributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CObjectAttributes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CObjectAttributes::kIdFieldNumber;
const int CObjectAttributes::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CObjectAttributes::CObjectAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CObjectAttributes_2eproto::InitDefaultsCObjectAttributes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tdrp.packet.CObjectAttributes)
}
CObjectAttributes::CObjectAttributes(const CObjectAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attributes_(from.attributes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tdrp.packet.CObjectAttributes)
}

void CObjectAttributes::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

CObjectAttributes::~CObjectAttributes() {
  // @@protoc_insertion_point(destructor:tdrp.packet.CObjectAttributes)
  SharedDtor();
}

void CObjectAttributes::SharedDtor() {
}

void CObjectAttributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CObjectAttributes::descriptor() {
  ::protobuf_CObjectAttributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CObjectAttributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CObjectAttributes& CObjectAttributes::default_instance() {
  ::protobuf_CObjectAttributes_2eproto::InitDefaultsCObjectAttributes();
  return *internal_default_instance();
}

CObjectAttributes* CObjectAttributes::New(::google::protobuf::Arena* arena) const {
  CObjectAttributes* n = new CObjectAttributes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CObjectAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:tdrp.packet.CObjectAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool CObjectAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tdrp.packet.CObjectAttributes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tdrp.packet.CObjectAttributes.Attribute attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tdrp.packet.CObjectAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tdrp.packet.CObjectAttributes)
  return false;
#undef DO_
}

void CObjectAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tdrp.packet.CObjectAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  // repeated .tdrp.packet.CObjectAttributes.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attributes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tdrp.packet.CObjectAttributes)
}

::google::protobuf::uint8* CObjectAttributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tdrp.packet.CObjectAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  // repeated .tdrp.packet.CObjectAttributes.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tdrp.packet.CObjectAttributes)
  return target;
}

size_t CObjectAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tdrp.packet.CObjectAttributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tdrp.packet.CObjectAttributes.Attribute attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CObjectAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tdrp.packet.CObjectAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const CObjectAttributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CObjectAttributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tdrp.packet.CObjectAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tdrp.packet.CObjectAttributes)
    MergeFrom(*source);
  }
}

void CObjectAttributes::MergeFrom(const CObjectAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tdrp.packet.CObjectAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CObjectAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tdrp.packet.CObjectAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CObjectAttributes::CopyFrom(const CObjectAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tdrp.packet.CObjectAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CObjectAttributes::IsInitialized() const {
  return true;
}

void CObjectAttributes::Swap(CObjectAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CObjectAttributes::InternalSwap(CObjectAttributes* other) {
  using std::swap;
  attributes_.InternalSwap(&other->attributes_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CObjectAttributes::GetMetadata() const {
  protobuf_CObjectAttributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CObjectAttributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace packet
}  // namespace tdrp

// @@protoc_insertion_point(global_scope)
